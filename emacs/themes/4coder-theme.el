(deftheme 4coder
  "My own implementation of the 4coder theme in Emacs")

(custom-theme-set-faces
 '4coder
 '(default ((t (:inherit nil :extend nil :stipple nil :background "#0c0c0c" :foreground "#90B080" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight regular :height 143 :width normal :foundry "outline" :family "FiraCode Nerd Font"))))
 '(cursor ((t (:background "#00EE00"))))
 '(fixed-pitch ((t (:height 160 :family "FiraCode Nerd Font"))))
 '(variable-pitch ((t (:weight thin :height 180 :family "FiraCode Nerd Font"))))
 '(escape-glyph ((t (:weight bold :foreground "#D08770"))))
 '(homoglyph ((t (:weight bold :foreground "#ddaa6f"))))
 '(minibuffer-prompt ((t (:weight bold :foreground "#88C0D0"))))
 '(highlight ((t (:underline (:color foreground-color :style line :position nil) :background "#1e1e1e"))))
 '(region ((t (:extend t :background "#3f3f3f"))))
 '(shadow ((t (:foreground "#4C566A"))))
 '(secondary-selection ((t (:extend t :foreground "#f6f3e8" :background "#434C5E"))))
 '(trailing-whitespace ((t (:background "#ffaa00"))))
 '(font-lock-bracket-face ((t (:foreground "#9399b2"))))
 '(font-lock-builtin-face ((t (:foreground "#ffffff"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#2090F0" :inherit (shadow)))))
 '(font-lock-comment-face ((t (:foreground "#2090F0" :inherit (shadow)))))
 '(font-lock-constant-face ((t (:foreground "#50FF30"))))
 '(font-lock-delimiter-face ((t (:foreground "#9399b2"))))
 '(font-lock-doc-face ((t (:foreground "#44b340" :inherit (font-lock-comment-face)))))
 '(font-lock-doc-markup-face ((t (:inherit (font-lock-constant-face)))))
 '(font-lock-escape-face ((t (:foreground "#f5c2e7"))))
 '(font-lock-function-call-face ((t (:foreground "#89b4fa"))))
 '(font-lock-function-name-face ((t (:foreground "#89b4fa"))))
 '(font-lock-keyword-face ((t (:foreground "#D08F20"))))
 '(font-lock-negation-char-face ((t (:foreground "#81A1C1"))))
 '(font-lock-number-face ((t (:foreground "#50FF30"))))
 '(font-lock-misc-punctuation-face ((t (:inherit (font-lock-punctuation-face)))))
 '(font-lock-operator-face ((t (:foreground "#89dceb"))))
 '(font-lock-preprocessor-face ((t (:foreground "#FFFFFF"))))
 '(font-lock-property-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(font-lock-property-use-face ((t (:inherit (font-lock-property-name-face)))))
 '(font-lock-punctuation-face ((t nil)))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#EBCB8B"))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#EBCB8B"))))
 '(font-lock-string-face ((t (:foreground "#50FF30"))))
 '(font-lock-type-face ((t (:foreground "#EDB211"))))
 '(font-lock-variable-name-face ((t (:foreground "#c1d1e3"))))
 '(font-lock-variable-use-face ((t (:foreground "#cdd6f4"))))
 '(font-lock-warning-face ((t (:foreground "#ffaa00" :inherit (warning)))))
; '(button ((t (:box (:line-width (2 . 2) :color "#D8DEE9" :style sunken-button) :foreground "#88C0D0" :background "#2E3440"))))
 '(link ((t (:underline (:color foreground-color :style line :position nil) :foreground "#8ac6f2"))))
 '(link-visited ((t (:underline (:color foreground-color :style line :position nil) :foreground "#e5786d"))))
 '(fringe ((t (:foreground "#ffffff" :background "#062329"))))
 '(header-line ((t (:foreground "#D8DEE9" :background "#434C5E" :inherit (mode-line)))))
 '(tooltip ((t (:foreground "#2E3440" :background "#D8DEE9"))))
 '(mode-line ((t (:box nil :foreground "#062329" :background "#d1b897"))))
 '(mode-line-buffer-id ((t (:weight bold :foreground "#062329"))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:box nil :foreground "#d1b897" :background "#062329"))))
 '(isearch ((t (:weight bold :foreground "#2E3440" :background "#88C0D0" :inherit (match)))))
 '(isearch-fail ((t (:foreground "#BF616A" :inherit (error)))))
 '(lazy-highlight ((t (:foreground "#a0a8b0" :background "#384048"))))
 '(match ((t (:foreground "#181825" :background "#f38ba8" :inherit (isearch)))))
 '(next-error ((t (:inherit (error)))))
 '(query-replace ((t (:foreground "#88C0D0" :background "#434C5E")))))

(provide-theme '4coder)
